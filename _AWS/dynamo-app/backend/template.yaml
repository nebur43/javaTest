AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Comments App

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 2024
    
Parameters:
  foroTable: 
    Description: Nombre de la tabla de foros
    Type: String
  threadTable: 
    Description: Nombre de la tabla de comentarios
    Type: String

Resources:
  createComment:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/createComment
      Handler: com.nebur.comment.App::handleRequest
      Runtime: java11
      AutoPublishAlias: produccion
      SnapStart:
        ApplyOn: PublishedVersions
      Architectures:
        - x86_64
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      Events:
        apiPut:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /comment
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref threadTable
  listComment:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/listComments
      Handler: com.nebur.comment.App::handleRequest
      Runtime: java11
      AutoPublishAlias: produccion
      SnapStart:
        ApplyOn: PublishedVersions      
      Architectures:
        - x86_64
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      Events:
        apiPut:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /comment/{id}
            Method: get     
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref threadTable
            
  createForo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/createForo
      Handler: com.nebur.comment.App::handleRequest
      Runtime: java11
      AutoPublishAlias: produccion
      SnapStart:
        ApplyOn: PublishedVersions
      Architectures:
        - x86_64
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      Events:
        apiPut:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /foro
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref foroTable
  listForo:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/listForos
      Handler: com.nebur.comment.App::handleRequest
      Runtime: java11
      AutoPublishAlias: produccion
      SnapStart:
        ApplyOn: PublishedVersions
      Architectures:
        - x86_64
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
      Events:
        apiGetId:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /foro/{id}
            Method: get
        apiGet:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /foro
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref foroTable            
            
# #Ticket DynamoDB table
# commentDDBTable:
#   Type: AWS::Serverless::SimpleTable
#   Properties:
#     TableName: comments
#     PrimaryKey:
#       Name: id
#       Type: String

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CommentAppApi:
    Description: "API Gateway endpoint URL for Prod stage for Comment World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/comment"
  ForoAppApi:
    Description: "API Gateway endpoint URL for Prod stage for Comment World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/foro"

